name: Notify Discord of Test Results

on:
  workflow_run:
    workflows: ["Windows Build and Test"]
    types:
      - completed

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Download test results artifact
        uses: actions/download-artifact@v4
        with:
          name: test-results
          path: ./test_results

      - name: Read test output
        id: read-output
        run: |
          # Ganze Datei einlesen
          FULL_OUTPUT=$(cat ./test_results/test_output.txt)

          # Maximal 100 Zeilen für Vorschau
          PREVIEW=$(echo "$FULL_OUTPUT" | head -n 100)

          # Fehlerlines (angenommen mit "error" oder "fail" im Text, Case insensitive)
          ERRORS=$(echo "$FULL_OUTPUT" | grep -iE 'error|fail' | head -n 10)

          # Escape Backticks und doppelte Anführungszeichen für JSON & Discord
          PREVIEW_ESCAPED=$(echo "$PREVIEW" | sed 's/`/\\`/g; s/"/\\"/g')
          ERRORS_ESCAPED=$(echo "$ERRORS" | sed 's/`/\\`/g; s/"/\\"/g')

          # Output setzen als JSON string (kann in nächsten Steps genutzt werden)
          echo "preview<<EOF" >> $GITHUB_OUTPUT
          echo "$PREVIEW_ESCAPED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "errors<<EOF" >> $GITHUB_OUTPUT
          echo "$ERRORS_ESCAPED" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_TESTS }}
          STATUS: ${{ github.event.workflow_run.conclusion }}
          PREVIEW: ${{ steps.read-output.outputs.preview }}
          ERRORS: ${{ steps.read-output.outputs.errors }}
        run: |
          if [ "$STATUS" = "success" ]; then
            COLOR=3066993
            TITLE="✅ Tests Passed"
            DESCRIPTION="Tests wurden erfolgreich ausgeführt.\n\nVorschau der Ausgabe:\n```\n$PREVIEW\n```"
          else
            COLOR=15158332
            TITLE="❌ Tests Failed"
            DESCRIPTION="Einige Tests sind fehlgeschlagen.\n\nFehlerausgabe (erste 10 Fehlerzeilen):\n```\n$ERRORS\n```\n\nVollständige Ausgabe (Vorschau):\n```\n$PREVIEW\n```"
          fi

          PAYLOAD=$(jq -n --arg title "$TITLE" --arg desc "$DESCRIPTION" --argjson color $COLOR \
          '{embeds: [{title: $title, description: $desc, color: $color}]}')

          curl -H "Content-Type: application/json" -X POST -d "$PAYLOAD" $DISCORD_WEBHOOK
